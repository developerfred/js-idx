(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{78:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return a})),r.d(t,"metadata",(function(){return i})),r.d(t,"rightToc",(function(){return s})),r.d(t,"default",(function(){return u}));var n=r(2),c=r(6),o=(r(0),r(91)),a={title:"What is Ceramic?",slug:"/concepts/ceramic"},i={unversionedId:"core-concepts-ceramic",id:"core-concepts-ceramic",isDocsHomePage:!1,title:"What is Ceramic?",description:"hello",source:"@site/docs/core-concepts-ceramic.md",slug:"/concepts/ceramic",permalink:"/docs/concepts/ceramic",editUrl:"https://github.com/ceramicstudio/js-idx/edit/master/website/docs/core-concepts-ceramic.md",version:"current",sidebar:"docs",previous:{title:"What is a Schema?",permalink:"/docs/concepts/schema"},next:{title:"Getting Started",permalink:"/docs/libs-getting-started"}},s=[{value:"Core Concepts",id:"core-concepts",children:[{value:"Network",id:"network",children:[]},{value:"Documents",id:"documents",children:[]},{value:"DocID",id:"docid",children:[]}]},{value:"Further Reading",id:"further-reading",children:[]}],p={rightToc:s};function u(e){var t=e.components,r=Object(c.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},p,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"hello")),Object(o.b)("p",null,"In IDX, ",Object(o.b)("strong",{parentName:"p"},"Ceramic")," is a decentralized network used for storing DIDs (such as ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/concepts/dids"}),"3ID"),") and IDX documents including ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/concepts/index"}),"indexes"),", ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/concepts/definition"}),"definitions"),", ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/concepts/reference"}),"references"),", and ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/concepts/schema"}),"schemas"),". IDX uses the Ceramic API, which is exposed by the ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/ceramicnetwork/js-ceramic"}),Object(o.b)("inlineCode",{parentName:"a"},"js-ceramic")," client"),"."),Object(o.b)("h2",{id:"core-concepts"},"Core Concepts"),Object(o.b)("h3",{id:"network"},"Network"),Object(o.b)("p",null,"Ceramic is a decentralized and permissionless network for managing mutable, verifiable documents in a global context. Anyone can run a Ceramic node and join the public network to query and/or write documents."),Object(o.b)("h3",{id:"documents"},"Documents"),Object(o.b)("p",null,"A document is a representation of structured data on the Ceramic network along with its metadata. IDX provides various high-level interfaces interacting with these documents."),Object(o.b)("h3",{id:"docid"},"DocID"),Object(o.b)("p",null,"A document identifier (DocID) is a URL that uniquely represents a document on Ceramic. Multiple APIs in IDX use DocIDs as inputs and/or outputs."),Object(o.b)("h2",{id:"further-reading"},"Further Reading"),Object(o.b)("p",null,"For more information on Ceramic, view the Ceramic ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://ceramic.network"}),"website")," or ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/ceramicnetwork/ceramic"}),"Github"),"."))}u.isMDXComponent=!0},91:function(e,t,r){"use strict";r.d(t,"a",(function(){return d})),r.d(t,"b",(function(){return m}));var n=r(0),c=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,c=function(e,t){if(null==e)return{};var r,n,c={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(c[r]=e[r]);return c}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(c[r]=e[r])}return c}var p=c.a.createContext({}),u=function(e){var t=c.a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=u(e.components);return c.a.createElement(p.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return c.a.createElement(c.a.Fragment,{},t)}},b=c.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,a=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=u(r),b=n,m=d["".concat(a,".").concat(b)]||d[b]||l[b]||o;return r?c.a.createElement(m,i(i({ref:t},p),{},{components:r})):c.a.createElement(m,i({ref:t},p))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,a=new Array(o);a[0]=b;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:n,a[1]=i;for(var p=2;p<o;p++)a[p]=r[p];return c.a.createElement.apply(null,a)}return c.a.createElement.apply(null,r)}b.displayName="MDXCreateElement"}}]);